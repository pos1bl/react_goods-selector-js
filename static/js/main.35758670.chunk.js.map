{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","product","setProduct","className","onClick","type","map","good","classNames","isEqual","chooseProduct","thisValue","getValue","ReactDOM","render","document","getElementById"],"mappings":"4OAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA8BC,mBAAS,OAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,uBAAMC,UAAU,oBAAhB,UACIF,EAME,qBAAIE,UAAU,sCAAd,oBACMF,EADN,gBAGE,wBACEG,QAAS,WACPF,EAAW,KAEb,UAAQ,cACRG,KAAK,SACLF,UAAU,mBAdhB,oBAAIA,UAAU,sCAAd,+BAoBF,uBAAOA,UAAU,QAAjB,SACE,gCACGL,EAAMQ,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRJ,UAAWK,IAAW,CACpB,+BAAgCC,EAAQF,EAAMN,KAJlD,UAOE,6BACE,wBACEG,QAAS,WACPF,EAAWQ,EAAcH,EAAMN,KAEjC,UAASQ,EAAQF,EAAMN,GACnB,eACA,YACJI,KAAK,SACLF,UAAWK,IAAW,SAAU,CAC9B,UAAWC,EAAQF,EAAMN,KAT7B,SAYGQ,EAAQF,EAAMN,GACX,IACA,QAIR,oBAAI,UAAQ,YAAYE,UAAU,eAAlC,SACGI,MA1BEA,cAqCbE,EAAU,SAACE,EAAWC,GAAZ,OAAyBA,IAAaD,GAEhDD,EAAgB,SAACC,EAAWC,GAChC,OAAKH,EAAQE,EAAWC,GAIjB,GAHED,GCtFXE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35758670.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [product, setProduct] = useState('Jam');\n\n  return (\n    <main className=\"section container\">\n      {!product ? (\n        <h1 className=\"title is-flex is-align-items-center\">\n          No goods selected\n        </h1>\n      )\n        : (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${product} is selected`}\n\n            <button\n              onClick={() => {\n                setProduct('');\n              }}\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n            />\n          </h1>\n        )\n      }\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(good => (\n            <tr\n              key={good}\n              data-cy=\"Good\"\n              className={classNames({\n                'has-background-success-light': isEqual(good, product),\n              })}\n            >\n              <td>\n                <button\n                  onClick={() => {\n                    setProduct(chooseProduct(good, product));\n                  }}\n                  data-cy={isEqual(good, product)\n                    ? 'RemoveButton'\n                    : 'AddButton'}\n                  type=\"button\"\n                  className={classNames('button', {\n                    'is-info': isEqual(good, product),\n                  })}\n                >\n                  {isEqual(good, product)\n                    ? '-'\n                    : '+'}\n                </button>\n              </td>\n\n              <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                {good}\n              </td>\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n\nconst isEqual = (thisValue, getValue) => getValue === thisValue;\n\nconst chooseProduct = (thisValue, getValue) => {\n  if (!isEqual(thisValue, getValue)) {\n    return thisValue;\n  }\n\n  return '';\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}